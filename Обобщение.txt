Термин «обобщение», по сути, означает параметризированный тип. Особая роль параметризированных типов состоит в том,
 что они позволяют создавать классы, структуры, интерфейсы, методы и делегаты, в которых обрабатываемые данные указываются
 в виде параметра. С помощью обобщений можно создать единый класс, который автоматически становится пригодным для обработки
 разнотипных данных. 
 Допустим, мы определяем класс для представления банковского счета.

class Account
{
    public int Id { get; set; }
    public int Sum { get; set; }
}

 Id - уникальный идентификатор и Sum - сумму на счете.Идентификатор может быть как в числовом значении так и в буквенном.
Если мы будем использовать object, то столкнемся с проблемой  как упаковка (boxing) и распаковка (unboxing).

Чтобы не вознкло такой проблемы воспользуемся обобщением. 

class Account<T>
{
    public T Id { get; set; }
    public int Sum { get; set; }
}

Account<int> account1 = new Account<int> { Sum = 5000 };
Account<string> account2 = new Account<string> { Sum = 4000 };
account1.Id = 2;        // упаковка не нужна
account2.Id = "4356";
int id1 = account1.Id;  // распаковка не нужна
string id2 = account2.Id;
Console.WriteLine(id1);
Console.WriteLine(id2);